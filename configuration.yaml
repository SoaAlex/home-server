
# Loads default set of integrations. Do not remove.
default_config:

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes

# Text to speech
tts:
  - platform: google_translate

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

homeassistant:
  external_url: "https://homeassistant.soaalex.com" # ne pas indiquer le port
  internal_url: "http://192.168.1.53:8123" # adresse locale de HA avec le port
http:
  use_x_forwarded_for: true
  trusted_proxies: # adresse(s) IP locale(s) du Proxy
    - 192.168.1.53
    - 127.0.0.1
    - 172.19.0.7
    - fe80::a15e:f37f:5986:1322
  ip_ban_enabled: false

template:
  - sensor:
      - name: "Garage Door"
        state: >
          {% if is_state('binary_sensor.garage_sensor', 'on') and is_state('switch.garage_door', 'on') %}
            opening
          {% elif is_state('binary_sensor.garage_sensor', 'off') and is_state('switch.garage_door', 'on') %}
            closing
          {% elif is_state('binary_sensor.garage_sensor', 'off') %}
            open
          {% else %}
            closed
          {% endif %}
      - name: "Portail"
        state: >
          {% if is_state('binary_sensor.gate', 'on') and is_state('switch.gate', 'on') %}
            opening
          {% elif is_state('binary_sensor.gate', 'off') and is_state('switch.gate', 'on') %}
            closing
          {% elif is_state('binary_sensor.gate', 'off') %}
            open
          {% else %}
            closed
          {% endif %}

cover:
  - platform: template
    covers:
      garage_door:
        device_class: garage
        friendly_name: "Garage Door"
        value_template: "{{ states('sensor.garage_door') }}"
        open_cover:
          - condition: state
            entity_id: sensor.garage_door
            state: "closed"
          - service: switch.toggle
            target:
              entity_id: switch.garage_door
        close_cover:
          - condition: state
            entity_id: sensor.garage_door
            state: "open"
          - service: switch.toggle
            target:
              entity_id: switch.garage_door
        stop_cover:
          service: switch.toggle
          target:
            entity_id: switch.garage_door
        icon_template: >-
          {% if is_state('cover.garage_door', 'opening') or is_state('cover.garage_door', 'closing') %}
            mdi:garage-alert
          {% elif is_state('cover.garage_door', 'open') %}
            mdi:garage-open
          {% else %}
            mdi:garage
          {% endif %}

      gate:
        device_class: gate
        friendly_name: "Portail"
        value_template: "{{ states('sensor.gate') }}"
        open_cover:
          - condition: state
            entity_id: sensor.gate
            state: "closed"
          - service: switch.toggle
            target:
              entity_id: switch.gate
        close_cover:
          - condition: state
            entity_id: sensor.gate
            state: "open"
          - service: switch.toggle
            target:
              entity_id: switch.gate
        stop_cover:
          service: switch.toggle
          target:
            entity_id: switch.gate
        icon_template: >-
          {% if is_state('cover.gate', 'opening') or is_state('cover.gate', 'closing') %}
            mdi:garage-alert
          {% elif is_state('cover.gate', 'open') %}
            mdi:garage-open
          {% else %}
            mdi:garage
          {% endif %}